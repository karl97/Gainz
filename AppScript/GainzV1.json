{"files":[{"id":"ac3d5eb2-8f4d-48a5-ab3e-e5d648fa6d0e","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/Stockholm\",\n  \"dependencies\": {\n    \"enabledAdvancedServices\": [\n      {\n        \"userSymbol\": \"Drive\",\n        \"version\": \"v2\",\n        \"serviceId\": \"drive\"\n      }\n    ]\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  }\n}"},{"id":"adf0a98c-a817-4537-8a6f-5baaf0500b6e","name":"Kod","type":"server_js","source":"\nfunction doPost(e){\nvar action \u003d e.parameter.action;\n\nif(action \u003d\u003d \u0027createWorkoutXML\u0027){\n  return createWorkoutXML(e);\n}\nif(action \u003d\u003d \u0027addExerciseXML\u0027)\n{\n  return addExerciseXML(e);\n}\nif(action \u003d\u003d \u0027deleteLastRow\u0027)\n{\n  return deleteLastRow(e);\n}\nif(action \u003d\u003d \u0027createNewRow\u0027)\n{\n  return createNewRow(e);\n}\n}\n\n\nfunction doGet(e){\n\nvar action \u003d e.parameter.action;\n\n  if(action \u003d\u003d \u0027getItems\u0027){\n    return getItems(e);\n\n  }\n\n  }\n\n\nfunction getItems()\n{\n  var workoutNames \u003d countSheetFilesInFolder()\n  var numWorkouts \u003d workoutNames.length\n  Logger.log(\u0027numWorkouts: \u0027 +numWorkouts);\n  var records\u003d{};\n  var data \u003d []\n  for (var i \u003d 0; i \u003c numWorkouts; i \u003d i + 1) \n  {\n    record \u003d {}\n    var workoutName \u003d workoutNames[i]\n    var ss \u003d openSpreadSheetByName(workoutName)\n    var sheets \u003d ss.getSheets()\n    var numEx \u003d sheets.length\n    Logger.log(\u0027numEx: \u0027 +numEx);\n    record[\u0027w\u0027] \u003d workoutName\n    record[\u0027num_ex\u0027] \u003d numEx\n    for (var j \u003d 0; j \u003c numEx; j++) \n    {\n      \n      var sheet \u003d sheets[j]\n      var allData \u003d sheet.getDataRange().getValues()\n      var firstRow \u003d allData[0]\n      var exName \u003d sheet.getName()\n      var sets \u003d firstRow.length - 3\n      var repRange \u003d firstRow[2]\n      record[\u0027ex\u0027+(j+1).toString()] \u003d exName\n      record[\u0027sets\u0027+(j+1).toString()] \u003d sets\n      record[\u0027repRange\u0027+(j+1).toString()] \u003d repRange\n      Logger.log(\u0027Workout:\u0027+workoutName+\" Exercise:\"+exName+\" sets:\"+sets+\" repRange:\"+repRange);\n     \n    }\n    data.push(record)\n  }\n  records.items \u003d data\n  var result\u003dJSON.stringify(records);\n  return ContentService.createTextOutput(result).setMimeType(ContentService.MimeType.JSON);\n}\n\nfunction countSheetFilesInFolder() \n{\n\n  var folder \u003d getFolder(\"GainzV1\");\n  var id \u003d folder.getId();\n var query \u003d \u0027trashed \u003d false and \u0027 +\n        \"\u0027\"+id+\"\u0027 in parents\";\n\n  var filesInFolder \u003d Drive.Files.list({q: query});\n\n  var list \u003d[]\n\n  for (var i\u003d0;i\u003cfilesInFolder.items.length;i++) {\n    //Logger.log(\u0027key: \u0027 + key);\n    var thisItem \u003d filesInFolder.items[i];\n    if(thisItem.title!\u003d\"GainzV1\"){\n      Logger.log(\u0027value: \u0027 + thisItem.title);\n      list.push(thisItem.title)\n    }\n  }\n  return list\n}\n\n\nfunction deleteLastRow(e)\n{\n  var ss \u003d openSpreadSheetByName(e.parameter.workout)\n  var sheet \u003d ss.getSheetByName(e.parameter.exercise)\n  var range \u003d sheet.getDataRange()\n  var rows \u003d range.getNumRows()\n  sheet.deleteRow(rows)\n\n  return ContentService.createTextOutput(\"Success\").setMimeType(ContentService.MimeType.TEXT);\n}\n\n\nfunction createNewRow(e)\n{\n  var ss \u003d openSpreadSheetByName(e.parameter.workout)\n  var sheet \u003d ss.getSheetByName(e.parameter.exercise)\n  var list \u003d []\n  list.push(new Date());\n  list.push(e.parameter.weight)\n  var sets \u003d e.parameter.sets\n  for (var counter \u003d 1; counter \u003c\u003d sets; counter \u003d counter + 1) \n  {\n    var key \u003d counter.toString()\n    list.push(e.parameter[key])\n  }\n  list.push(e.parameter.note)\n  sheet.appendRow(list)\n\n  return ContentService.createTextOutput(\"Success\").setMimeType(ContentService.MimeType.TEXT);\n}\n\n\nfunction addExerciseXML(e)\n{\n  var ss \u003d openSpreadSheetByName(e.parameter.workout)\n  var sheet \u003d ss.getSheetByName(\"Blad1\")\n  if(sheet!\u003dnull)\n  {\n    sheet.setName(e.parameter.exerciseName);\n  }\n  else\n  {\n    sheet \u003d ss.insertSheet();\n    sheet.setName(e.parameter.exerciseName);\n  }\n\n  var list \u003d []\n  list.push(\"Date\");\n  list.push(\"Weight\")\n  var sets \u003d e.parameter.sets\n  for (var counter \u003d 1; counter \u003c\u003d sets; counter \u003d counter + 1) \n  {\n  list.push(\"\u0027\"+e.parameter.reps)\n  }\n  list.push(\"Note\")\n  sheet.appendRow(list)\n  \n  return ContentService.createTextOutput(\"Success\").setMimeType(ContentService.MimeType.TEXT);\n}\n\nfunction openSpreadSheetByName(filename) {\n  var FileIterator \u003d DriveApp.getFilesByName(filename);\n  while (FileIterator.hasNext())\n  {\n    var file \u003d FileIterator.next();\n    if (file.getName() \u003d\u003d filename)\n    {\n      return SpreadsheetApp.open(file);\n    }    \n  }\n}\n\nfunction createWorkoutXML(e){\n  var name \u003d e.parameter.workoutName;\n  var folder \u003d getFolder(\"GainzV1\");\n  var folderId \u003d folder.getId();\n  var resource \u003d \n  {\n    title: name,\n    mimeType: MimeType.GOOGLE_SHEETS,\n    parents: [{ id: folderId }]\n  }\n  var fileJson \u003d Drive.Files.insert(resource)\n  var fileId \u003d fileJson.id\n  return ContentService.createTextOutput(\"Success\").setMimeType(ContentService.MimeType.TEXT);\n\n}\n\nfunction getFolder(folderName)\n{      \n  var folders \u003d DriveApp.getFolders();     \n while (folders.hasNext()) {\n   var folder \u003d folders.next();\n   if(folderName \u003d\u003d folder.getName()) {         \n     return folder;\n   }\n }\n  return null;\n}"}]}